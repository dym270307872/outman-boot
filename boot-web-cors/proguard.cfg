-target 1.8 ##指定java版本号
-dontshrink ##默认是开启的，这里关闭shrink，即不删除没有使用的类/成员
-dontoptimize ##默认是开启的，这里关闭字节码级别的优化
-useuniqueclassmembernames ##对于类成员的命名的混淆采取唯一策略
-adaptclassstrings ## 混淆类名之后，对使用Class.forName('className')之类的地方进行相应替代
-dontusemixedcaseclassnames ## 混淆时不生成大小写混合的类名，默认是可以大小写混合
##对异常、注解信息在runtime予以保留，不然影响springboot启动
-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod
##保留main方法的类及其方法名
-keepclasseswithmembers public class * { public static void main(java.lang.String[]);}
-keepclassmembers enum * { *; }  ##保留枚举成员及方法
#-keepclassmembers

## 保持对外的接口性质类对外的类名与方法名不变
#-keep class com.example.common.sort.exact.bean.**
-keep class cn.dyaoming.outman.controllers.**
#保持dao层类名不变
#-keep class com.xxl.job.admin.dao.**
#-keep class com.xxl.job.admin.dao.** { *; }  

#-keep class  com.xxl.job.admin.core.model.**
#-keep class  com.xxl.job.admin.core.model.** { *; } ##这里需要改成解析到哪个  javabean

#保持jar包不变
#-libraryjars <java.home>/lib/rt.jar(java/,javax/)
#-libraryjars **.jar
#-libraryjars lib\log4j-core-2.10.0.jar
#-libraryjars lib\log4j-jcl-2.10.0.jar
#-libraryjars lib\log4j-web-2.10.0.jar

# 设置源文件中给定的字符串常量。
#-renamesourcefileattribute {String}
##---------------Begin: proguard configuration for Gson ---------- # Gson uses generic type information stored in a class file when working with fields. Proguard # removes such information by default, so configure it to keep all of it. -keepattributes Signature # Gson specific classes -keep class sun.misc.Unsafe { *; } #-keep class com.google.gson.stream.** { *; } # Application classes that will be serialized/deserialized over Gson #-keep class com.google.gson.examples.android.model.** { *; } ##这里需要改成解析到哪个 javabean -keep class com.google.**{*;} -keepclassmembers class * implements java.io.Serializable { static final long serialVersionUID; private static final java.io.ObjectStreamField[] serialPersistentFields; private void writeObject(java.io.ObjectOutputStream); private void readObject(java.io.ObjectInputStream); java.lang.Object writeReplace(); java.lang.Object readResolve(); } ##---------------End: proguard configuration for Gson ----------